<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.MemberInfoMapper" >
  <resultMap id="BaseResultMap" type="com._520it.crm.domain.MemberInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="vipClass" property="vipClass" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="adress" property="adress" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <!--宠物查询-->
  <collection property="petinfos" ofType="Petinfo" column="id"
      select="com._520it.crm.mapper.PetInfoMapper.selectByMemberInfoId">
    </collection>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from memberinfo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com._520it.crm.domain.MemberInfo" useGeneratedKeys="true" keyProperty="id" >
    insert into memberinfo (number, name, vipClass,
      balance, tel, gender,
      birthday, adress, remark
      )
    values (#{number,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{vipClass,jdbcType=VARCHAR},
      #{balance,jdbcType=DOUBLE}, #{tel,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
      #{birthday,jdbcType=DATE}, #{adress,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com._520it.crm.domain.MemberInfo" >
    update memberinfo
    set number = #{number,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      vipClass = #{vipClass,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DOUBLE},
      tel = #{tel,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      adress = #{adress,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, number, name, vipClass, balance, tel, gender, birthday, adress, remark
    from memberinfo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, number, name, vipClass, balance, tel, gender, birthday, adress, remark,email
    from memberinfo
  </select>

  <select id="queryMemberByNumber" resultType="MemberInfo">
    select id, number, name, vipClass, balance, tel, gender, birthday, adress, remark
    from memberinfo where number = #{number}
  </select>


  <!--宠物服务需要的方法-->
  <resultMap id="petServiceResultMap" type="com._520it.crm.domain.MemberInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="vipClass" property="vipClass" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="adress" property="adress" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <!--宠物查询-->
    <collection property="petinfos" ofType="PetInfo" column="id"
      select="com._520it.crm.mapper.PetInfoMapper.selectByMemberInfoId">
    </collection>
  </resultMap>
  <select id="queryInfoByMemberId" resultMap="petServiceResultMap" parameterType="java.lang.Long" >
    select id, number, name, vipClass, balance, tel, gender, birthday, adress, remark
    from memberinfo
    where number = #{memberId}
  </select>

  <!--根据会员id查询 余额-->
  <select id="queryBalanceByMemberId" resultType="double">
    select balance from MemberInfo where id = #{memberId}
  </select>

  <update id="updateMemberBalanceByMember" >
    update MemberInfo set balance = #{balance} where id = #{memberId}
  </update>

</mapper>