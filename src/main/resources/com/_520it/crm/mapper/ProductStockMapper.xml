<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.ProductStockMapper" >
  <resultMap id="BaseResultMap" type="com._520it.crm.domain.ProductStock" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="supplier_id" property="supplierId" jdbcType="BIGINT" />
    <result column="packageNumber" property="packageNumber" jdbcType="INTEGER" />
    <result column="bulkNumber" property="bulkNumber" jdbcType="INTEGER" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="warnNumber" property="warnNumber" jdbcType="INTEGER" />
    <result column="storeNumber" property="storeNumber" jdbcType="BIGINT" />
    <result column="incomeDate" property="incomeDate" jdbcType="TIMESTAMP" />
    <result column="outcomeDate" property="outcomeDate" jdbcType="TIMESTAMP" />
    <association property="productInfo" column="productInfo_id" javaType="ProductInfo"
                 select="com._520it.crm.mapper.ProductInfoMapper.selectByPrimaryKey"/>
    <association property="productPart" column="productPart_id" javaType="ProductPart"
                 select="com._520it.crm.mapper.ProductPartMapper.selectByPrimaryKey"/>
    <collection property="productInfo" ofType="ProductInfo" columnPrefix="pi_">
      <id property="id" column="id"/>
      <result property="code" column="code"/>
      <result property="name" column="name"/>
      <result property="price" column="price"/>
      <result property="memberPrice" column="memberPrice"/>
    </collection>
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from productstock
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com._520it.crm.domain.ProductStock" useGeneratedKeys="true" keyProperty="id" >
    insert into productstock (productInfo_id, productPart_id, packageNumber,
    bulkNumber, amount, warnNumber,
    storeNumber, incomeDate, outcomeDate,sn
    )
    values (#{productInfo.id,jdbcType=BIGINT}, #{productPart.id,jdbcType=BIGINT}, #{packageNumber,jdbcType=INTEGER},
    #{bulkNumber,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{warnNumber,jdbcType=INTEGER},
    #{storeNumber,jdbcType=BIGINT}, #{incomeDate,jdbcType=TIMESTAMP}, #{outcomeDate,jdbcType=TIMESTAMP}, #{sn,jdbcType=VARCHAR}
    )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com._520it.crm.domain.ProductStock" >
    update productstock
    set
    productInfo_id=#{productInfo.id},
    packageNumber = #{packageNumber,jdbcType=INTEGER},
    bulkNumber = #{bulkNumber,jdbcType=INTEGER},
    amount = #{amount,jdbcType=DECIMAL},
    warnNumber = #{warnNumber,jdbcType=INTEGER},
    storeNumber = #{storeNumber,jdbcType=BIGINT},
    sn = #{sn,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, productInfo_id, productPart_id, packageNumber, bulkNumber, amount, warnNumber, sn,
    storeNumber, incomeDate, outcomeDate
    from productstock
    where id = #{id,jdbcType=BIGINT}


  </select>

  <sql id="where_clause">
    <where>
      <if test="keyword!=null">
        AND  (ps.sn LIKE CONCAT('%',#{keyword},'%') OR pi.code LIKE CONCAT('%',#{keyword},'%'))
      </if>
      <if test="productName!=null">
        AND  (pi.name LIKE CONCAT('%',#{productName},'%'))
      </if>
      <if test="productType!=null">
        AND  pi.productpart_id=#{productType}
      </if>
    </where>
  </sql>

  <select id="selectAll" resultMap="BaseResultMap" >
    select id, productInfo_id, productPart_id, packageNumber, bulkNumber, amount, warnNumber, sn,
    storeNumber, incomeDate, outcomeDate
    from productstock
  </select>





  <select id="queryForData" resultMap="BaseResultMap" >
    SELECT * FROM productstock  ps
    JOIN productinfo pi ON ps.productinfo_id=pi.id JOIN producttype pt on pt.id=pi.producttype_id
    <include refid="where_clause"/>
    limit #{pageStart},#{rows}
  </select>




  <select id="queryForCount" resultType="long" >
    select COUNT(ps.id)
    FROM productstock  ps
    JOIN productinfo pi ON ps.productinfo_id=pi.id JOIN producttype pt on pt.id=pi.producttype_id
    <include refid="where_clause"/>
  </select>



  <!--根据商品69条码查询 库存对象-->
  <select id="getProductStockByProductinfoCode" resultMap="BaseResultMap">
    select ps.id, ps.productInfo_id, ps.supplier_id, ps.packageNumber, ps.bulkNumber, ps.amount, ps.warnNumber,
           ps.storeNumber, ps.incomeDate, ps.outcomeDate,
       pi.id pi_id , pi.code pi_code , pi.name pi_name , pi.price pi_price ,pi.memberPrice pi_memberPrice
    from productstock ps
    join productinfo pi on pi.id = ps.productInfo_id
    where pi.code = #{code}
  </select>



</mapper>