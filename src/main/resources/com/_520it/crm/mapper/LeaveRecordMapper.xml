<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.LeaveRecordMapper">
    <resultMap id="BaseResultMap" type="com._520it.crm.domain.LeaveRecord">
        <id column="id" property="id" jdbcType="BIGINT"/>

        <result column="leaveCategory" property="leavecategory" jdbcType="VARCHAR"/>
        <result column="reason" property="reason" jdbcType="VARCHAR"/>
        <result column="beginTime" property="begintime" jdbcType="TIMESTAMP"/>
        <result column="finishTime" property="finishtime" jdbcType="TIMESTAMP"/>
        <result column="days" property="days" jdbcType="BIGINT"/>
        <result column="view" property="view" jdbcType="VARCHAR"/>
        <result column="normal" property="normal" jdbcType="INTEGER"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="cancelReason" property="cancelreason" jdbcType="VARCHAR"/>
        <association property="employeeId" javaType="com._520it.crm.domain.Employee" columnPrefix="e_">
            <id column="id" property="id"/>
            <result property="jobNumber" column="jobNumber"/>
        </association>
        <association property="employeeName" javaType="com._520it.crm.domain.Employee" columnPrefix="e_">
            <id column="id" property="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from leaverecord
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com._520it.crm.domain.LeaveRecord" useGeneratedKeys="true" keyProperty="id">
    insert into leaverecord (employee_id, leaveCategory,
      reason, beginTime, finishTime, 
      days, view, normal, 
      state, cancelReason)
    values (#{employeeId.id,jdbcType=BIGINT}, #{leavecategory,jdbcType=VARCHAR},
      #{reason,jdbcType=VARCHAR}, #{begintime,jdbcType=TIMESTAMP}, #{finishtime,jdbcType=TIMESTAMP}, 
      #{days,jdbcType=BIGINT}, #{view,jdbcType=VARCHAR}, #{normal,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{cancelreason,jdbcType=VARCHAR})
  </insert>

    <update id="saveByCancelReason">
     update  leaverecord set cancelReason=#{cancelreason},state=1 where id = #{id}
  </update>

    <update id="updateByPrimaryKey" parameterType="com._520it.crm.domain.LeaveRecord">
    update leaverecord
    set employee_id = #{employeeId.id,jdbcType=BIGINT},
      leaveCategory = #{leavecategory,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      beginTime = #{begintime,jdbcType=TIMESTAMP},
      finishTime = #{finishtime,jdbcType=TIMESTAMP},
      days = #{days,jdbcType=BIGINT},
      view = #{view,jdbcType=VARCHAR},
      normal = #{normal,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      cancelReason = #{cancelreason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, employee_id, leaveCategory, reason, beginTime, finishTime, days,
    view, normal, state, cancelReason
    from leaverecord
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, employee_id, leaveCategory, reason, beginTime, finishTime, days,
    view, normal, state, cancelReason
    from leaverecord
  </select>

    <sql id="baes_where">
        <where>
            <if test="keyword!=null">
                and (e.jobNumber like concat('%',#{keyword},'%') or e.name like concat('%',#{keyword},'%'))
            </if>
        </where>
    </sql>
    <select id="selectByCount" resultType="long">
        select count(le.id)
        from leaverecord le LEFT JOIN employee e ON le.employee_id = e.id
        <include refid="baes_where"></include>
    </select>
    <select id="selectByPageList" resultMap="BaseResultMap">
        select le.id,le.leaveCategory,le.reason, le.beginTime, le.finishTime, le.days,le.view, le.normal, le.state,
        le.cancelReason,
        e.id e_id,e.name e_name,e.jobNumber e_jobNumber
        from leaverecord le LEFT JOIN employee e ON le.employee_id = e.id
        <include refid="baes_where"></include>
        limit #{start},#{rows}
    </select>
</mapper>