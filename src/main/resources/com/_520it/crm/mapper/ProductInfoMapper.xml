<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.ProductInfoMapper" >
  <resultMap id="BaseResultMap" type="com._520it.crm.domain.ProductInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="memberprice" property="memberPrice" jdbcType="DECIMAL" />
    <!-- 关联关系处理 -->
    <association property="productType" javaType="com._520it.crm.domain.ProductType">
    	<id column="pt_id" property="id" jdbcType="BIGINT" />
    	<result column="pt_name" property="name" jdbcType="VARCHAR" />
    </association>
    <association property="brand" javaType="Brand">
    	<id column="b_id" property="id" jdbcType="BIGINT" />
    	<result column="b_name" property="name" jdbcType="VARCHAR" />
    	<association property="location" javaType="Location">
    		<id column="l_id" property="id" jdbcType="BIGINT" />
    		<result column="l_name" property="name" jdbcType="VARCHAR" />
    	</association>
    </association>
    <association property="harm" javaType="Harm">
    	<id column="h_id" property="id" jdbcType="BIGINT" />
    	<result column="h_name" property="name" jdbcType="VARCHAR" />
    </association>
    <association property="productPart" javaType="ProductPart">
    	<id column="pp_id" property="id" jdbcType="BIGINT" />
    	<result column="pp_name" property="name" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ProductInfo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com._520it.crm.domain.ProductInfo" useGeneratedKeys="true" keyProperty="id" >
    insert into ProductInfo (code, name, producttype_id, 
      brand_id,
      harm_id, price, state, 
      img, info, memberprice,productpart_id)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{productType.id,jdbcType=BIGINT}, 
      #{brand.id,jdbcType=BIGINT}, 
      #{harm.id,jdbcType=BIGINT}, #{price,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER}, 
      #{img,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}, #{memberPrice,jdbcType=DECIMAL}, #{productPart.id,jdbcType=BIGINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com._520it.crm.domain.ProductInfo" >
    update ProductInfo
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      producttype_id = #{productType.id,jdbcType=BIGINT},
      brand_id = #{brand.id,jdbcType=BIGINT},
      harm_id = #{harm.id,jdbcType=BIGINT},
      productpart_id = #{productPart.id,jdbcType=BIGINT},
      price = #{price,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER},
      img = #{img,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      memberprice = #{memberPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
select pi.id, pi.code, pi.name,
    pt.id pt_id,pt.name pt_name,
    b.id b_id,b.name b_name,
    l.id l_id,l.name l_name,
    h.id h_id,h.name h_name,
    pp.id pp_id,pp.name pp_name,
    pi.price, pi.state, pi.img, pi.info,pi.memberprice
    from ProductInfo pi join producttype pt on pi.producttype_id=pt.id
    left join brand b on pi.brand_id = b.id
    left join location l on b.location_id=l.id
    left join harm h on pi.harm_id = h.id
    left join productpart pp on pp.id=pi.productpart_id
    where pi.id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select pi.id, pi.code, pi.name, 
    pt.id pt_id,pt.name pt_name,
    b.id b_id,b.name b_name,
    l.id l_id,l.name l_name,
    h.id h_id,h.name h_name,
    pp.id pp_id,pp.name pp_name,
    pi.price, pi.state, pi.img, pi.info,pi.memberprice
    from ProductInfo pi join producttype pt on pi.producttype_id=pt.id
    left join brand b on pi.brand_id = b.id 
    left join location l on b.location_id=l.id
    left join harm h on pi.harm_id = h.id
    left join productpart pp on pp.id=pi.productpart_id
  </select>
  
    <!-- 高级查询 -->
  <sql id="base_where">
  	<where>
	  	<if test="productName!=null">
	  		and pi.name like concat('%',#{productName},'%')
	  	</if>
	  	<if test="productPartName!=null">
	  		and pp.name like concat('%',#{productPartName},'%')
	  	</if>
	  	<if test="productTypeId!=null">
	  		and pt.id = #{productTypeId}
	  	</if>
	  	<if test="brandId!=null">
	  		and b.id = #{brandId}
	  	</if>
  	</where>
  </sql>
  <select id="queryForCount" resultType="long">
  	select count(pi.id) from productinfo pi
  	left join producttype pt on pi.producttype_id=pt.id
    left join brand b on pi.brand_id = b.id 
    left join location l on b.location_id=l.id
    left join harm h on pi.harm_id = h.id
    left join productpart pp on pp.id=pi.productpart_id
  	<include refid="base_where"/>
  </select>
  <select id="queryForList" resultMap="BaseResultMap">
    select pi.id, pi.code, pi.name, 
    pt.id pt_id,pt.name pt_name,
    b.id b_id,b.name b_name,
    l.id l_id,l.name l_name,
    h.id h_id,h.name h_name,
    pp.id pp_id,pp.name pp_name,
    pi.price, pi.state, pi.img, pi.info,pi.memberprice
    from productinfo pi 
    left join producttype pt on pi.producttype_id=pt.id
    left join brand b on pi.brand_id = b.id 
    left join location l on b.location_id=l.id
    left join harm h on pi.harm_id = h.id
    left join productpart pp on pp.id=pi.productpart_id
    <include refid="base_where"/>
    limit #{start},#{rows}
  </select>
  <update id="changeState">
  	update productinfo
  	   set 
  	   state=0
  	where id=#{id}
  </update>
  
  
</mapper>