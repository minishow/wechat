<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.CashBillMapper" >

  <resultMap id="BaseResultMap" type="com._520it.crm.domain.CashBill" >
    <id column="id" property="id" />
    <result column="sn" property="sn" />
    <result column="orderTime" property="orderTime" />
    <result column="totalNumber" property="totalNumber"  />
    <result column="totalAmount" property="totalAmount"  />
    <result column="paymentTerm" property="paymentTerm"  />
    <result column="employeeName" property="employeeName" />
    <result column="shopName" property="shopName"/>
 <!--   <association property="memberId" javaType="MemberInfo" columnPrefix="m_">
        <id column="id" property="id"/>
        <result column="number" property="number"/>
    </association>-->
    <collection property="items" ofType="CashBillItem" column="id"
                select="com._520it.crm.mapper.CashBillItemMapper.queryItemsByBillId"/>
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from cashbill
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com._520it.crm.domain.CashBill" useGeneratedKeys="true" keyProperty="id" >
    insert into cashbill (sn,member_id, shopName,
      orderTime, totalNumber, totalAmount, 
      employeeName, paymentTerm)
    values (#{sn}, #{memberId.id}, #{shopName},
      #{orderTime}, #{totalNumber}, #{totalAmount},
      #{employeeName}, #{paymentTerm,})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com._520it.crm.domain.CashBill" >
    update cashbill
    set sn = #{sn,jdbcType=VARCHAR},
      member_id = #{memberId.id,jdbcType=BIGINT},
      shopName = #{shopName,jdbcType=BIGINT},
      orderTime = #{orderTime,jdbcType=TIMESTAMP},
      totalNumber = #{totalNumber,jdbcType=DOUBLE},
      totalAmount = #{totalAmount,jdbcType=DOUBLE},
      employeeName = #{employeeName,jdbcType=BIGINT},
      paymentTerm = #{paymentTerm,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, sn, member_id, shopName, orderTime, totalNumber, totalAmount, employeeName, 
    paymentTerm
    from cashbill
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, sn, member_id, shopName, orderTime, totalNumber, totalAmount, employeeName, 
    paymentTerm
    from cashbill
  </select>

  <sql id="base_where">
    <where>
      <if test="keyword !=null">
        and m.number like concat ('%',#{keyword},'%')
      </if>
      <if test="beginDate != null">
        and c.orderTime >= #{beginDate}
      </if>
      <if test="endDate != null">
        and c.orderTime &lt;= #{endDate}
      </if>
      <if test="way > 0">
        and c.paymentTerm = #{way}
      </if>
    </where>
  </sql>

  <select id="queryCount" resultType="long">
    select count(c.id) from cashbill c
    left join memberinfo m on m.id = c.member_id
    <include refid="base_where"/>
  </select>

  <select id="queryData" resultMap="BaseResultMap">
    select c.id, c.sn, c.member_id, c.shopName, c.orderTime, c.totalNumber, c.totalAmount, c.employeeName,c.paymentTerm,
      m.id m_id , m.number m_number
    from cashbill c
    left join memberinfo m on m.id = c.member_id
    <include refid="base_where"/>
    limit #{start},#{rows}
  </select>


  <select id="selectByTypeId" resultMap="BaseResultMap" >
    select id, sn, member_id, shopName, orderTime, totalNumber, totalAmount, employeeName,
    paymentTerm
    from cashbill
    WHERE paymentTerm = #{typeId}
  </select>

</mapper>