<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.StockOutRecordMapper" >
  <resultMap id="BaseResultMap" type="com._520it.crm.domain.StockOutRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="auditor" property="auditor" jdbcType="VARCHAR" />
    <result column="details" property="details" jdbcType="VARCHAR" />
    <association property="stockOprationBill" column="stockOprationBill_id" javaType="StockOprationBill"
                 select="com._520it.crm.mapper.StockOprationBillMapper.selectByPrimaryKey"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from stockoutrecord
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com._520it.crm.domain.StockOutRecord" useGeneratedKeys="true" keyProperty="id" >
    insert into stockoutrecord (stockOprationBill_id, state, auditor, 
      details)
    values (#{stockOprationBill.id,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, #{auditor,jdbcType=VARCHAR}, 
      #{details,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com._520it.crm.domain.StockOutRecord" >
    update stockoutrecord
    set stockOprationBill_id = #{stockOprationBill.id,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      auditor = #{auditor,jdbcType=VARCHAR},
      details = #{details,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, stockOprationBill_id, state, auditor, details
    from stockoutrecord
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, stockOprationBill_id, state, auditor, details
    from stockoutrecord
  </select>



  <sql id="where_clause">
    <where>
      <if test="keyword!=null">
        AND  (sir.auditor LIKE CONCAT('%',#{keyword},'%') OR s.name LIKE CONCAT('%',#{keyword},'%'))
      </if>
      <if test="inputTime!=null">
        AND sob.inputTime>#{inputTime}
      </if>

    </where>
  </sql>


  <select id="queryForData" resultMap="BaseResultMap" >
  select * from stockoutrecord sir
    JOIN stockoprationbill sob
    on sir.stockoprationbill_id=sob.id
    join supplier s on sob.supplier_id=s.id
    <include refid="where_clause"/>
    limit #{start},#{rows}
  </select>

  <select id="queryForCount" resultType="long" >
    select COUNT(sir.id)
     from stockoutrecord sir
    JOIN stockoprationbill sob
    on sir.stockoprationbill_id=sob.id
    join supplier s on sob.supplier_id=s.id
    <include refid="where_clause"/>
  </select>



</mapper>